@model WebSaleHfFood.ViewModels.ProductDetailViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Name;
    ViewData["Description"] = Model.DescriptionSeo;
    ViewData["Image"] = Model.ImgSeo;
    ViewData["UrlSeo"] = "http://anhat.vn/ShopDetail?variantId=" + Model.VariantId;
}
<style>
    .price-product-sale {
        font-size: 20px;
        color: #afafaf;
        text-decoration: line-through;
    }
</style>
<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-section set-bg" data-setbg="img/breadcrumb.jpg">
    <div class="container" style="margin-top: 30px !important;">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Vegetable’s Package</h2>
                    <div class="breadcrumb__option">
                        <a asp-controller="Home" asp-action="index">Trang chủ</a>
                        <a href="./index.html">Vegetables</a>
                        <span>@Model.Name</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
<!-- Product Details Section Begin -->
<section class="product-details spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-8">
                <div class="product__details__pic">
                    <div class="product__details__pic__item">
                        <img class="product__details__pic__item--large"
                             src="@Url.Content(Model.Imgs.FirstOrDefault())" alt="@Model.Name">
                    </div>
                    <div class="product__details__pic__slider owl-carousel">
                        @foreach (var item in Model.Imgs)
                        {
                            <img data-imgbigurl="@Url.Content(item)"
                                 src="@Url.Content(item)" alt="">
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="product__details__text">
                    <h3>@Html.DisplayFor(modelItem => modelItem.Name)</h3>
                    <div class="product__details__rating">
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star-half-o"></i>
                        <span>(@Html.DisplayFor(modelItem => modelItem.RatingNumber) reviews)</span>
                    </div>
                    <div id="price-product-base" class="product__details__price">
                        <span id="price-product">0</span>

                    </div>
                    <div class="product__details__price">
                        <div class="row">
                            <ul class="pt-0 mt-0 nav" style="border-top: none;">
                                @{int i = 0;}
                                @foreach (var item in Model.VariantSizes)
                                {
                                    i++;
                                    <li class="mx-3">
                                        <button id="btn-size-id-@i" class="btn-size-change btn btn-outline-success" onclick="setActiveSize('@item.Id',@item.Price, @item.Discount, @item.Size, '@item.Unit', @i)">
                                            @Html.DisplayFor(modelItem => item.Size) @Html.DisplayFor(modelItem =>item.Unit)
                                            <i class="fa fa-check" aria-hidden="true"></i>
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                   
                    <div class="product__details__quantity">
                        <div class="quantity">
                            <div class="pro-qty">
                                <input type="text" id="quantity-product-value" value="1">
                            </div>
                        </div>
                    </div>
                    <a class="primary-btn text-white btn-product-to-cart" style="cursor: pointer" onclick="addToCart('@Model.VariantId', '@Model.Name', '@Model.Imgs.FirstOrDefault()')">THÊM VÀO GIỎ HÀNG</a>
                    <a href="#" class="heart-icon"><span class="icon_heart_alt"></span></a>
                    <ul>
                        <li><b>Availability</b> <span>In Stock</span></li>
                        <li><b>Shipping</b> <span>01 day shipping. <samp>Free pickup today</samp></span></li>
                        <li><b>Weight</b> <span>0.5 kg</span></li>
                        <li>
                            <b>Share on</b>
                            <div class="share">
                                <a href="#"><i class="fa fa-facebook"></i></a>
                                <a href="#"><i class="fa fa-twitter"></i></a>
                                <a href="#"><i class="fa fa-instagram"></i></a>
                                <a href="#"><i class="fa fa-pinterest"></i></a>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-12 mt-5">
                @await Component.InvokeAsync("ProductInfoDetail", new { variantId =  Model.VariantId})
            </div>
        </div>
    </div>
</section>
<!-- Product Details Section End -->
<!-- Related Product Section Begin -->
<section class="related-product">
    @await Component.InvokeAsync("ProductRelated", new { groupId = Model.GroupId})
</section>
<!-- Related Product Section End -->


<script>
    var productCurrent = {};
    function setActiveSize(id, price, salePrice, _size, _unit, index) {
        $(".btn-size-change").removeClass("active");
        var element = document.getElementById('btn-size-id-' + index);
        element.classList.add("active");
        const money = formatter.format(price);

        let moneyStr = `<span class="price-product-sale"> ${money} </span> `;
        if (salePrice && salePrice > 0) {
            const moneySale = formatter.format(salePrice);
            moneyStr += `<span  >${moneySale} </span>`;
        }
        $("#price-product-base").html(moneyStr);
        productCurrent.sizeId = id;
        productCurrent.price = price;
        productCurrent.salePrice = salePrice;
        productCurrent.size = _size;
        productCurrent.unit = _unit;
    }

    
    function autoClickBtnSize() {
        $('#btn-size-id-1').click();
    }
    function init() {
        setTimeout(() => {
            this.autoClickBtnSize();
        }, 100)
    }
    this.init();
</script>